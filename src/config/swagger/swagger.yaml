swagger: '2.0'
info:
  title: Linemate
  version: 1.0.0
host: localhost:3000
schemes:
  - http

securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: 'Enter your token with "Bearer " prefix. Example: **Bearer <token>**'

paths:
  /permission/v1/add:
    post:
      summary: Create Permission
      tags:
        - Permission
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: user.write
              type:
                type: string
                example: platform
              description:
                type: string
                example: user can add and edit user
      responses:
        '200':
          description: Success

  /permission/v1/{id}:
    get:
      summary: Get Permission by Id
      tags:
        - Permission
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
    put:
      summary: Update Permission
      tags:
        - Permission
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: user.view
              type:
                type: string
                example: platform
              description:
                type: string
                example: user can view user
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Permission
      tags:
        - Permission
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success

  /permission/v1/list:
    post:
      summary: List Permissions
      tags:
        - Permission
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
                example: 1
              limit:
                type: integer
                example: 10
              sortField:
                type: string
                example: id
              sortOrder:
                type: string
                example: ASC
      responses:
        '200':
          description: Success

  /role/v1/add:
    post:
      summary: Create Role
      tags:
        - Role
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: Access Portal
              type:
                type: string
                example: custom
              description:
                type: string
                example: have access portal
              permissionIds:
                type: array
                items:
                  type: integer
                example: []
              userIds:
                type: array
                items:
                  type: integer
                example: []
              tenantId:
                type: integer
                example: 1
      responses:
        '200':
          description: Success

  /role/v1/{id}:
    get:
      summary: Get Role by Id
      tags:
        - Role
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
    put:
      summary: Update Role
      tags:
        - Role
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: Access Portal
              type:
                type: string
                example: custom
              description:
                type: string
                example: have access portal
              permissionIds:
                type: array
                items:
                  type: integer
                example: []
              userIds:
                type: array
                items:
                  type: integer
                example: []
              tenantId:
                type: integer
                example: 1
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Role
      tags:
        - Role
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success

  /role/v1/list:
    post:
      summary: List Roles
      tags:
        - Role
      security:
        - BearerAuth: []
      parameters:
        - name: tenantId
          in: header
          required: false
          type: integer
          example: 1
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
                example: 1
              limit:
                type: integer
                example: 10
              sortField:
                type: string
                example: id
              sortOrder:
                type: string
                example: ASC
              search:
                type: string
                example: ''
      responses:
        '200':
          description: Success

  /auth/v1/login:
    post:
      summary: Login User
      tags:
        - Auth
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
                example: akash@codiot.com
              password:
                type: string
                example: Admin@123
              countryCode:
                type: string
                example: +91
      responses:
        '200':
          description: Success

  /auth/v1/forgot-password:
    post:
      summary: Forgot Password
      tags:
        - Auth
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
                example: akash@codiot.com
      responses:
        '200':
          description: Success

  /auth/v1/verify-otp:
    post:
      summary: Verify OTP
      tags:
        - Auth
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              otp:
                type: string
                example: 336119
      responses:
        '200':
          description: Success

  /auth/v1/reset-password:
    post:
      summary: Reset Password
      tags:
        - Auth
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              otp:
                type: string
                example: 336119
              password:
                type: string
                example: qwe@123
      responses:
        '200':
          description: Success

  /auth/v1/file-upload:
    post:
      summary: Upload a file
      tags:
        - File
      security:
        - BearerAuth: []
      parameters:
        - name: type
          in: formData
          required: true
          type: string
          enum: [tenantLogo, userProfile, content]
          description: The type of the file.
          example: Tenant_Logo
        - in: formData
          name: elementId
          required: false
          schema:
            type: string
            description: The ID related to the content.
            example: 1
        - in: formData
          name: file
          required: true
          type: file
          description: The file to upload.
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /user/v1/add:
    post:
      summary: Create User
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: string
                example: Nikunj
              lastName:
                type: string
                example: Dhaduk
              email:
                type: string
                example: nikunj.dhaduk33@gmail.com
              countyCode:
                type: string
                example: +91
              mobileNumber:
                type: string
                example: 9912226316
              userType:
                type: string
                example: Company Admin
              tenantIds:
                type: array
                items:
                  type: integer
                example: [1]
              employeeId:
                type: string
                example: uiui
              profilePhoto:
                type: string
                example: ''
              tenantVariables:
                type: array
                items:
                  type: object
                  properties:
                    tenantId:
                      type: integer
                      example: 1
                    variables:
                      type: array
                      items:
                        type: object
                        properties:
                          variableId:
                            type: integer
                            example: 1
                          value:
                            type: string
                            example: managere
      responses:
        '200':
          description: Success

  /user/v1/{id}:
    get:
      summary: Get User by Id
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
    put:
      summary: Update User
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: string
                example: Nikunj
              lastName:
                type: string
                example: Dhaduk
              email:
                type: string
                example: nikunj.dhaduk1@gmail.com
              mobileNumber:
                type: string
                example: 9912123291
              userType:
                type: string
                example: Company Admin
              countyCode:
                type: string
                example: +91
              tenantIds:
                type: array
                items:
                  type: integer
                example: [1]
              employeeId:
                type: string
                example: ''
              profilePhoto:
                type: string
                example: ''
              tenantVariables:
                type: array
                items:
                  type: object
                  properties:
                    tenantId:
                      type: integer
                      example: 1
                    variables:
                      type: array
                      items:
                        type: object
                        properties:
                          variableId:
                            type: integer
                            example: 1
                          value:
                            type: string
                            example: managere
      responses:
        '200':
          description: Success

  /user/v1/list:
    post:
      summary: List Users
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - name: tenantId
          in: header
          required: false
          type: integer
          example: 1
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
                example: 1
              limit:
                type: integer
                example: 10
              sortField:
                type: string
                example: id
              sortOrder:
                type: string
                example: ASC
              search:
                type: string
                example: '91'
              filter:
                type: object
                properties:
                  isActive:
                    type: boolean
                    example: true
                  dynamicFilter:
                    type: array
                    items:
                      type: object
                      properties:
                        filterTitle:
                          type: string
                          example: "Joining Date"
                        filterKey:
                          type: string
                          example: "joiningDate"
                        filterType:
                          type: string
                          example: "DateRange"
                        minValue:
                          type: string | number
                          format: date
                          example: "2024-08-01"
                        maxValue:
                          type: string | number
                          format: date
                          example: "2024-08-31"
                      required:
                        - filterTitle
                        - filterKey
                        - filterType
                        - minValue
                        - maxValue
                    example:
                      - filterTitle: "Joining Date"
                        filterKey: "joiningDate"
                        filterType: "DateRange"
                        minValue: "2024-08-01"
                        maxValue: "2024-08-31"
                      - filterTitle: "role"
                        filterKey: "role"
                        filterType: "DropDown"
                        selectedValue: "hr"
                        variableId: 6
                        options:
                          - "manager"
                          - "hr"
                      - filterTitle: "role"
                        filterKey: "role"
                        filterType: "DropDown"
                        selectedValue: "manager"
                        variableId: 7
                        options:
                          - "manager"
                          - "hr"
                      - filterTitle: "role12"
                        filterKey: "role12"
                        filterType: "DropDown"
                        selectedValue: "manager"
                        variableId: 8
                        options:
                          - "manager"
                          - "hr"
                      - filterTitle: "Experience"
                        filterKey: "experience"
                        filterType: "NumberRange"
                        maxValue: 2
                        minValue: 1
      responses:
        '200':
          description: Success
          
  /user/v1/delete-users:
    post:
      summary: Delete Bulk Users
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              userIds:
                type: array
                items:
                  type: integer
                example: [2, 3]
      responses:
        '200':
          description: Success

  /user/v1/de-active:
    post:
      summary: Deactivate Bulk Users
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              userIds:
                type: array
                items:
                  type: integer
                example: [2]
      responses:
        '200':
          description: Success

  /user/v1/active-users:
    post:
      summary: Activate Bulk Users
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              userIds:
                type: array
                items:
                  type: integer
                example: [2]
      responses:
        '200':
          description: Success

  /user/v1/change-password:
    post:
      summary: Change Password for Bulk Users
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              userIds:
                type: array
                items:
                  type: integer
                example: [2, 3]
              tenantId:
                type: integer
                example: 3
      responses:
        '200':
          description: Success

  /tenant/v1/add:
    post:
      summary: Create Tenant
      tags:
        - Tenant
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: Test1
              companyType:
                type: string
                example: partnership
              trademark:
                type: string
                example: admin@gmail.com
              phoneNumber:
                type: integer
                example: 1234567890
              gstNumber:
                type: string
                example: 123456780
              currencyCode:
                type: string
                example: INR
              isdCode:
                type: integer
                example: 91
              clientType:
                type: string
                example: Test
              authorisedFirstName:
                type: string
                example: test
              authorisedLastName:
                type: string
                example: tcd
              authorisedEmail:
                type: string
                example: cdcd
              authorisedMobileNo:
                type: integer
                example: 1234567890
              companyAddress:
                type: string
                example: cdcd
              companyCountry:
                type: string
                example: cdcd
              companyState:
                type: string
                example: cdcad
              companyCity:
                type: string
                example: cdcd
              companyPinCode:
                type: integer
                example: 395006
              whitelistedIps:
                type: string
                example: cdc
      responses:
        '200':
          description: Success

  /tenant/v1/{id}:
    get:
      summary: Get Tenant
      tags:
        - Tenant
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  companyType:
                    type: string
                  trademark:
                    type: string
                  phoneNumber:
                    type: integer
                  gstNumber:
                    type: string
                  currencyCode:
                    type: string
                  isdCode:
                    type: integer
                  clientType:
                    type: string
                  authorisedFirstName:
                    type: string
                  authorisedLastName:
                    type: string
                  authorisedEmail:
                    type: string
                  authorisedMobileNo:
                    type: integer
                  companyAddress:
                    type: string
                  companyCountry:
                    type: string
                  companyState:
                    type: string
                  companyCity:
                    type: string
                  companyPinCode:
                    type: integer
                  whitelistedIps:
                    type: string
        '404':
          description: Tenant not found
    put:
      summary: Update Tenant
      tags:
        - Tenant
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: Test1
              companyType:
                type: string
                example: partnership
              trademark:
                type: string
                example: admin@gmail.com
              phoneNumber:
                type: integer
                example: 1234567890
              gstNumber:
                type: string
                example: 123456780
              currencyCode:
                type: string
                example: INR
              isdCode:
                type: integer
                example: 91
              clientType:
                type: string
                example: Test
              authorisedFirstName:
                type: string
                example: test
              authorisedLastName:
                type: string
                example: tcd
              authorisedEmail:
                type: string
                example: cdcd
              authorisedMobileNo:
                type: integer
                example: 1234567890
              companyAddress:
                type: string
                example: cdcd
              companyCountry:
                type: string
                example: cdcd
              companyState:
                type: string
                example: cdcad
              companyCity:
                type: string
                example: cdcd
              companyPinCode:
                type: integer
                example: 395006
              whitelistedIps:
                type: string
                example: cdc
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Tenant
      tags:
        - Tenant
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
        '404':
          description: Tenant Not Found

  /tenant/v1/list:
    post:
      summary: List Tenant
      tags:
        - Tenant
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
                example: 1
              limit:
                type: integer
                example: 10
              sortField:
                type: string
                example: id
              sortOrder:
                type: string
                example: ASC
      responses:
        '200':
          description: Success

  /variable/v1/add:
    post:
      summary: Add Variable
      tags:
        - Variable
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: role
              isMandatory:
                type: boolean
                example: true
              type:
                type: string
                example: multiSelect
              description:
                type: string
                example: test description
              placeHolder:
                type: string
                example: role
              category:
                type: string
                example: custom
              tenantId:
                type: integer
                example: 1
              options:
                type: array
                items:
                  type: string
                example: ['Role', 'Manager']
      responses:
        '200':
          description: Success

  /variable/v1/{id}:
    get:
      summary: Get Variable by Id
      tags:
        - Variable
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success

    put:
      summary: Update Variable
      tags:
        - Variable
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: role
              isMandatory:
                type: boolean
                example: true
              type:
                type: string
                example: multiSelect
              description:
                type: string
                example: test description
              placeHolder:
                type: string
                example: role
              category:
                type: string
                example: custom
              tenantId:
                type: integer
                example: 1
              options:
                type: array
                items:
                  type: string
                example: ['Role', 'Manager']
      responses:
        '200':
          description: Success

    post:
      summary: Delete Variable
      tags:
        - Variable
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success

  /variable/v1/list:
    post:
      summary: List Variables
      tags:
        - Variable
      security:
        - BearerAuth: []
      parameters:
        - name: tenantId
          in: header
          required: false
          type: integer
          example: 2
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
                example: 1
              limit:
                type: integer
                example: 10
              sortField:
                type: string
                example: id
              sortOrder:
                type: string
                example: ASC
              search:
                type: string
                example: ''
              filter:
                type: object
                properties:
                  category:
                    type: string
                    example: 'custom'
      responses:
        '200':
          description: Success

  /variable/v1/{userId}:
    post:
      summary: Get Variable by userId
      tags:
        - Variable
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              tenantId:
                type: integer
                example: 3
      responses:
        '200':
          description: Success

  /content/v1/add:
    post:
      summary: Add Content
      tags:
        - Content
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: Access Portal
              type:
                type: string
                enum:
                  - PDF
                  - Video
                  - Document
                  - PowerPoint
                  - Scorm
                  - Assessment
                example: PDF
              description:
                type: string
                example: have access portal
              uploadedFileIds:
                type: array
                items:
                  type: integer
                example: []
              tenantId:
                type: integer
                example: 1
              isPublish:
                type: boolean
                example: false
              isArchive:
                type: boolean
                example: false
      responses:
        '200':
          description: Success
        
  /content/v1/{id}:
    get:
      summary: Get Content by Id
      tags:
        - Content
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
    put:
      summary: Update Content
      tags:
        - Content
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: Access Portal
              type:
                type: string
                example: PDF
              description:
                type: string
                example: have access portal
              uploadedFileIds:
                type: array
                items:
                  type: integer
                example: []
              tenantId:
                type: integer
                example: 1
              isPublish:
                type: boolean
                example: false
              isArchive:
                type: boolean
                example: false
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Content
      tags:
        - Content
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success

  /content/v1/list:
    post:
      summary: List Contents
      tags:
        - Content
      security:
        - BearerAuth: []
      parameters:
        - name: tenantId
          in: header
          required: false
          type: integer
          example: 1
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
                example: 1
              limit:
                type: integer
                example: 10
              sortField:
                type: string
                example: id
              sortOrder:
                type: string
                example: ASC
              search:
                type: string
                example: ''
              filter:
                type: object
                properties:
                  archive:
                    type: boolean
                    example: true
                  isPublish:
                    type: boolean
                    example: false
                  updatedBetween:
                    type: object
                    properties:
                      startDate:
                        type: string
                        format: date
                        example: '2024-07-17'
                      endDate:
                        type: string
                        format: date
                        example: '2024-07-31'
      responses:
        '200':
          description: Success

  /filters/v1/list:
    get:
      summary: List Filters
      description: Retrieve a list of filters based on the specified criteria.
      tags:
        - Filters
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: filterFor
          required: true
          type: string
          description: Specify the category for which filters are being requested, e.g., 'employee,tenant,content'.
        - name: tenantId
          in: header
          required: true
          type: integer
          example: 1
      responses:
        '200':
          description: Successful retrieval of filters
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    type:
                      type: string
                    description:
                      type: string

  /cohort/v1/rule-options:
    get:
      summary: Retrieve rule options
      tags:
        - Cohort
      operationId: getRuleOptions
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: tenantId
          required: true
          schema:
            type: integer
          description: 'Example : 1'
      responses:
        '200':
          description: Success
          
  /cohort/v1/add:
    post:
      summary: Create a new cohort
      tags:
        - Cohort
      operationId: addCohort
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              tenantId:
                type: integer
                description: ID of the tenant
                example: 1
              name:
                type: string
                description: Name of the cohort
                example: "test cohort"
              userIds:
                type: array
                description: List of user IDs to be added to the cohort
                items:
                  type: integer
                example: [2, 3]
              isExistingRuleProcess:
                type: boolean
                description: process rule for existing users
                example: true
              rules:
                type: array
                description: Rules for the cohort
                items:
                  type: object
                  properties:
                    and:
                      type: array
                      items:
                        type: object
                        properties:
                          or:
                            type: array
                            items:
                              type: object
                              properties:
                                title:
                                  type: string
                                  example: "cohort"
                                operators:
                                  type: string
                                  example: "EQUAL"
                                value:
                                  type: string
                                  example: "1"
                            required:
                              - title
                              - operators
                              - value
            required:
              - tenantId
              - name
              - userIds
              - rules
      responses:
        '200':
          description: Cohort added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "test cohort"
                      tenantId:
                        type: integer
                        example: 1
                      createdAt:
                        type: string
                        format: date-time
                        example: "2024-08-23T11:16:47.590Z"
                  message:
                    type: string
                    example: "Cohort created successfully"

  /cohort/v1/{id}:
    get:
      summary: Get Cohort by Id
      tags:
        - Cohort
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
    put:
      summary: Update a cohort
      tags:
        - Cohort
      operationId: updateCohort
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true         
          schema:
            type: integer
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              tenantId:
                type: integer
                description: ID of the tenant
                example: 1
              name:
                type: string
                description: Name of the cohort
                example: "test cohort"
              userIds:
                type: array
                description: List of user IDs to be added to the cohort
                items:
                  type: integer
                example: [2, 3]
              isExistingRuleProcess:
                type: boolean
                description: process rule for existing users
                example: true
            required:
              - tenantId
              - name
              - userIds
      responses:
        '200':
          description: Cohort updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "test cohort"
                      tenantId:
                        type: integer
                        example: 1
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2024-08-23T11:16:47.590Z"
                  message:
                    type: string
                    example: "Cohort updated successfully"
    delete:
      summary: Delete a cohort
      tags:
        - Cohort
      operationId: deleteCohort
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cohort deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Cohort deleted successfully"  

  /cohort/v1/list:
    post:
      summary: List cohort
      tags:
        - Cohort
      security:
        - BearerAuth: []
      parameters:
        - name: tenantId
          in: header
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
                example: 1
              limit:
                type: integer
                example: 10
              sortField:
                type: string
                example: id
              sortOrder:
                type: string
                example: ASC
              search:
                type: string
                example: ''
      responses:
        '200':
          description: Success  

  /cohort/v1/get-cohort-by-user:
    post:
      summary: List cohort By User
      tags:
        - Cohort
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              userId:
                type: array
                items:
                  type: integer
                example: [2]
      responses:
        '200':
          description: Success  


  /cohort/v1/assign-cohort:
    post:
      summary: Assign users to a specified cohort.
      tags:
        - Cohort
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              cohortIds:
                type: array
                items:
                  type: integer
                example: [2]
              userIds:
                type: array
                items:
                  type: integer
                example: [2, 3]
      responses:
        '200':
          description: Success

  /assessment/v1/add:
    post:
      summary: "Create a new assessment"
      tags:
        - Assessment
      description: "Creates a new assessment with questions."
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          description: Assessment object that needs to be added
          required: true
          schema:
            type: object
            required:
              - name
              - description
              - pass
              - timed
              - contentId
              - scoring
              - totalQuestion
              - score
              - questions
              - skill
            properties:
              name:
                type: string
                example: "Test Assessment"
              description:
                type: string
                example: "Test Assessment"
              pass:
                type: integer
                example: 50
              timed:
                type: integer
                example: 10
              contentId:
                type: integer
                example: 1
              scoring:
                type: string
                example: "max score"
                enum: [max score, per question, no score]
              totalQuestion:
                type: integer
                example: 10
              score:
                type: integer
                example: 50
              questions:
                type: array
                items:
                  type: object
                  required:
                    - question
                    - type
                    - options
                    - answer
                  properties:
                    question:
                      type: string
                      example: "what is your age range?"
                    type:
                      type: string
                      example: "single select"
                    options:
                      type: array
                      items:
                        type: string
                        example: "0-15,15-20,20-30,30-60"
                    answer:
                      type: string
                      example: "20-30"
              skill:
                type: array
                items:
                  type: string
                  example: "new Skill"
      responses:
        201:
          description: Assessment created successfully
        400:
          description: Invalid input

  /assessment/v1/{id}:
    get:
      summary: Get assement by Id
      tags:
        - Assessment
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
    put:
      summary: Update Assessment
      tags:
        - Assessment
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          description: Assessment object that needs to be added
          required: true
          schema:
            type: object
            required:
              - name
              - description
              - pass
              - timed
              - contentId
              - scoring
              - totalQuestion
              - score
              - questions
              - skill
            properties:
              name:
                type: string
                example: "Test Assessment"
              description:
                type: string
                example: "Test Assessment"
              pass:
                type: integer
                example: 50
              timed:
                type: integer
                example: 10
              contentId:
                type: integer
                example: 1
              scoring:
                type: string
                example: "max score"
              totalQuestion:
                type: integer
                example: 10
              score:
                type: integer
                example: 50
              questions:
                type: array
                items:
                  type: object
                  required:
                    - question
                    - type
                    - options
                    - answer
                  properties:
                    question:
                      type: string
                      example: "what is your age range?"
                    type:
                      type: string
                      example: "single select"
                    options:
                      type: array
                      items:
                        type: string
                        example: "0-15,15-20,20-30,30-60"
                    answer:
                      type: string
                      example: "20-30"
              skill:
                type: array
                items:
                  type: string
                  example: "new Skill"
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Assessment
      tags:
        - Assessment
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success

  /assessment/v1/list:
    post:
      summary: List assessment
      tags:
        - Assessment
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              page:
                type: integer
                example: 1
              limit:
                type: integer
                example: 10
              sortField:
                type: string
                example: id
              sortOrder:
                type: string
                example: ASC
              search:
                type: string
                example: ''
              filter:
                type: object
                properties:
                  contentId:
                    type: integer
                    example: 1
      responses:
        '200':
          description: Success

  
tags:
  - name: Permission
    description: Endpoints for creating and managing permissions.
  - name: Role
    description: Endpoints for creating and managing roles.
  - name: Auth
    description: Endpoints for user authentication.
  - name: User
    description: Endpoints for managing users.
  - name: Tenant
    description: Endpoints for creating and managing tenants.
  - name: Variable
    description: Endpoints for creating and managing variables.
  - name: Content
    description: Endpoints for creating and managing content.
  - name: Assessment
    description: Endpoints for creating and managing assessment.
  - name: Filters
    description: Endpoints for get dynamic filters .
  - name: File
    description: Endpoints for upload file .
  - name: Cohort
    description: Endpoints for creating cohort and managing users  .
